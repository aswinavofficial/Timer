{"version":3,"sources":["App.js","index.js"],"names":["App","useState","totalMinutes","setTotalMinutes","totalSeconds","setTotalSeconds","totalTime","timeLeft","setTimeLeft","timerRunning","setTimerRunning","currentTask","setCurrentTask","interval","useRef","padZero","time","toString","padStart","minutes","Math","floor","seconds","className","value","onChange","e","currentTarget","contentEditable","suppressContentEditableWarning","onInput","textContent","onClick","current","setInterval","localStorage","setItem","clearInterval","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAGe,SAASA,IAAO,IAAD,EAEUC,mBAAS,IAFnB,mBAEtBC,EAFsB,KAETC,EAFS,OAGUF,mBAAS,GAHnB,mBAGtBG,EAHsB,KAGTC,EAHS,OAIEJ,mBAASK,KAJX,mBAItBC,EAJsB,KAIbC,EAJa,OAKUP,oBAAS,GALnB,mBAKtBQ,EALsB,KAKTC,EALS,OAMQT,mBAAS,kBANjB,mBAMtBU,EANsB,KAMVC,EANU,KAOxBC,EAAWC,iBAAO,MAEtB,SAASC,EAAQC,GACf,OAAOA,EAAKC,WAAWC,SAAS,EAAE,KAGpC,SAASZ,IAEP,OAAsB,GAAfJ,EAAoBE,EA+C7B,IAAIe,EAAUC,KAAKC,MAAMd,EAAW,IAChCe,EAAUF,KAAKC,MAAMd,EAAmB,GAARY,GACpC,OACE,yBAAKI,UAAU,OAEb,yBAAKA,UAAU,QACX,2BACAC,MAAOb,EACPc,SAAW,SAACC,GACVd,EAAec,EAAEC,cAAcH,WAIrC,yBAAKD,UAAU,SACf,0BAAMK,iBAAkBnB,EACrBoB,gCAAgC,EAC/BC,QAAS,SAACJ,GACRvB,EAAgBuB,EAAEC,cAAcI,eAEnChB,EAAQI,IAGX,mCAEE,0BAAMS,iBAAkBnB,EACvBoB,gCAAgC,EAC/BC,QAAS,SAACJ,GACRrB,EAAgBqB,EAAEC,cAAcI,eAEnChB,EAAQO,KAIX,yBAAKC,UAAU,WACb,4BACES,QAzER,WAEwB,MAAnBnB,EAASoB,UAEVvB,GAAgB,GAChBF,EAAYF,KACZO,EAASoB,QAAUC,aAAY,WAC/B1B,GAAY,SAAAD,GAEV,OAAGA,GAAW,EACPA,EAAW,GAbtB4B,aAAaC,QAAQ,OAAOzB,GAgBxBD,GAAgB,GAChB2B,cAAcxB,EAASoB,SACvBzB,EAAYF,KACL,QAET,OAwDIgC,SAAU7B,GAFZ,SAKA,4BACEuB,QAvDR,WAEEtB,GAAgB,GAChB2B,cAAcxB,EAASoB,SACvBpB,EAASoB,QAAU,MAoDbK,UAAW7B,GAFb,QAKA,4BAAQuB,QApDd,WAEEtB,GAAgB,GAChB2B,cAAcxB,EAASoB,SACvBzB,EAAYF,KACZO,EAASoB,QAAU,OA+Cf,WCzGRM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.f724caf9.chunk.js","sourcesContent":["import React, { useState,useRef } from 'react';\nimport './App.css';\n\nexport default function App() {\n\n  const[totalMinutes,setTotalMinutes] = useState(25)\n  const[totalSeconds,setTotalSeconds] = useState(0)\n  const[timeLeft,setTimeLeft] = useState(totalTime())\n  const[timerRunning,setTimerRunning] = useState(false)\n  const[currentTask,setCurrentTask] = useState(\"#Lets Crack It\")\n  let interval = useRef(null)\n\n  function padZero(time) {\n    return time.toString().padStart(2,'0');\n  }\n\n  function totalTime() {\n\n    return totalMinutes * 60 + totalSeconds;\n\n  }\n\n  function taskCompleted() {\n\n    localStorage.setItem(\"task\",currentTask);\n  }\n\n  function startTimer() {\n\n    if(interval.current ==null) {\n\n      setTimerRunning(true)\n      setTimeLeft(totalTime())\n      interval.current = setInterval(()=> {\n      setTimeLeft(timeLeft => {\n\n        if(timeLeft>= 1)\n        return timeLeft - 1;\n\n        taskCompleted()\n        setTimerRunning(false)\n        clearInterval(interval.current);\n        setTimeLeft(totalTime());\n        return 0;\n      })\n    },1000);\n\n  }\n  }\n\n  function stopTimer() {\n\n    setTimerRunning(false)\n    clearInterval(interval.current);\n    interval.current = null;\n  }\n\n  function resetTimer() {\n\n    setTimerRunning(false)\n    clearInterval(interval.current);\n    setTimeLeft(totalTime());\n    interval.current = null;\n\n  }\n  let minutes = Math.floor(timeLeft / 60);\n  let seconds = Math.floor(timeLeft - minutes*60);\n  return (\n    <div className=\"app\">\n      {/* <h2>Pomodoro!</h2> */}\n      <div className=\"task\">\n          <input  \n          value={currentTask}\n          onChange ={(e)=> {\n            setCurrentTask(e.currentTarget.value)\n          }}/>\n      </div>\n\n      <div className=\"timer\">\n      <span contentEditable={!timerRunning} \n         suppressContentEditableWarning={true}\n          onInput={(e)=> {\n            setTotalMinutes(e.currentTarget.textContent)\n          }}>\n        {padZero(minutes)}\n      </span>\n\n      <span>:</span>\n      \n        <span contentEditable={!timerRunning} \n         suppressContentEditableWarning={true}\n          onInput={(e)=> {\n            setTotalSeconds(e.currentTarget.textContent)\n          }}>\n        {padZero(seconds)}\n      </span>\n      </div>\n\n      <div className=\"buttons\">\n        <button \n          onClick = {startTimer}\n          disabled={timerRunning}>\n          Start\n        </button>\n        <button \n          onClick ={stopTimer}\n          disabled={!timerRunning}>\n          Stop\n          </button>\n        <button onClick={resetTimer}>Reset</button>\n      </div>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}